AWSTemplateFormatVersion: '2010-09-09'
Description: Roles needed for CI/CD pipeline for ReCiter and also an S3 bucket to store pipeline artifacts
Resources:
    CodeBuildRole:
        Type: 'AWS::IAM::Role'
        Properties:
            AssumeRolePolicyDocument:
                Statement:
                    - 
                        Action:
                            - 'sts:AssumeRole'
                        Effect: Allow
                        Principal:
                            Service:
                                - codebuild.amazonaws.com
                Version: '2012-10-17'
            Path: /
            Policies:
                - 
                    PolicyDocument:
                        Statement:
                            - 
                                Action:
                                    - 'logs:Put*'
                                    - 'logs:Create*'
                                    - 's3:Put*'
                                    - 's3:GetObject'
                                    - 's3:GetObjectVersion'
                                    - 's3:GetBucketVersioning'
                                Effect: Allow
                                Resource: '*'
                        Version: '2012-10-17'
                    PolicyName: codebuild-ci-reciter-CodeBuildPolicy
            RoleName: codebuild-ci-reciter-CodeBuildRole
    #Service Role to be used for the code pipeline
    CodePipelineRole:
      Type: "AWS::IAM::Role"
      Properties:
        RoleName:
          Fn::Sub: CodePipelineRole-${AWS::StackName}
        AssumeRolePolicyDocument:
          Version: "2012-10-17"
          Statement:
            -
              Effect: "Allow"
              Principal:
                Service:
                  - "codepipeline.amazonaws.com"
              Action:
                - "sts:AssumeRole"
        Path: /
        Policies:
          -
            PolicyName: "CodePipelineAccessPolicy"
            PolicyDocument:
              Version: "2012-10-17"
              Statement:
                - 
                    Action:
                        - 's3:GetObject'
                        - 's3:GetObjectVersion'
                        - 's3:GetBucketVersioning'
                    Resource: '*'
                    Effect: Allow
                - 
                    Action:
                        - 's3:PutObject'
                    Resource:
                        - 'arn:aws:s3:::codepipeline*'
                        - 'arn:aws:s3:::elasticbeanstalk*'
                    Effect: Allow
                - 
                    Action:
                        - 'codedeploy:CreateDeployment'
                        - 'codedeploy:GetApplicationRevision'
                        - 'codedeploy:GetDeployment'
                        - 'codedeploy:GetDeploymentConfig'
                        - 'codedeploy:RegisterApplicationRevision'
                    Resource: '*'
                    Effect: Allow
                - 
                    Action:
                        - 'logs:*'
                        - 'elasticbeanstalk:*'
                        - 'ec2:*'
                        - 'elasticloadbalancing:*'
                        - 'autoscaling:*'
                        - 'cloudwatch:*'
                        - 's3:*'
                        - 'sns:*'
                        - 'cloudformation:*'
                        - 'rds:*'
                        - 'sqs:*'
                        - 'ecs:*'
                    Resource: '*'
                    Effect: Allow
                - 
                    Action:
                      - 'opsworks:CreateDeployment'
                      - 'opsworks:DescribeApps'
                      - 'opsworks:DescribeCommands'
                      - 'opsworks:DescribeDeployments'
                      - 'opsworks:DescribeInstances'
                      - 'opsworks:DescribeStacks'
                      - 'opsworks:UpdateApp'
                      - 'opsworks:UpdateStack'
                    Resource: '*'
                    Effect: Allow
                - 
                    Action:
                        - 's3:ListBucket'
                        - 's3:GetBucketPolicy'
                        - 's3:GetObjectAcl'
                        - 's3:PutObjectAcl'
                        - 's3:DeleteObject'
                    Resource: 'arn:aws:s3:::elasticbeanstalk*'
                    Effect: Allow
                - 
                    Action:
                        - "codebuild:StartBuild"
                        - "codebuild:BatchGetBuilds"
                    Resource: '*'
                    Effect: "Allow"
    CodePipelineS3Bucket:
      Type: AWS::S3::Bucket
      Properties: 
        AccessControl: Private
        BucketName: 
          !Join
            - '-'
            -
              - 'codepipeline'
              - !Ref 'AWS::Region'
              - !Ref 'AWS::AccountId'
        Tags:
          - Key: 'venue'
            Value: 'reciter-workshop'

Outputs:
    CodeBuildName:
        Description: CodeBuild service role name
        Value:
            Ref: CodeBuildRole
        Export:
          Name: codebuild-service-role
    CodePipelineRoleName:
        Description: CodePipeline service role name
        Value:
            Ref: CodePipelineRole
        Export:
          Name: codepipeline-service-role
    CodePipelineRoleNameArn:
        Description: CodePipeline service role name arn
        Value:
            !GetAtt CodePipelineRole.Arn
        Export:
          Name: codepipeline-service-role-arn
    CodePipelineS3BucketName:
        Description: CodePipeline bucket name
        Value:
            !Ref CodePipelineS3Bucket
        Export:
          Name: codepipeline-s3-bucket-name
